// Build file which can only run when dependencies and plugins have been downloaded.

//    PLUGINS
// ==============
plugins {
    id 'java'
    id 'distribution'
    // publishing
    id 'maven'
    id 'signing'
//    id 'maven-publish'
//    id 'com.jfrog.bintray' version '1.8.2'
    // ide
    id 'idea'
    id 'eclipse'
    // code style
    id "com.diffplug.gradle.spotless" version "3.16.0"
    // code coverage
    id 'jacoco'
    // license
    id 'com.github.hierynomus.license' version '0.15.0'
    id "com.github.hierynomus.license-report" version"0.15.0"
    // test sets
    id 'org.unbroken-dome.test-sets' version '2.1.1'
    // docker compose
    // id "com.palantir.docker-compose" version "0.31.0-rc1"
    id "org.sonarqube" version "3.4.0.2513"
}

//    IMPORTS
// =============
apply from: 'gradle/common.gradle'
apply from: 'gradle/test.gradle'
apply from: 'gradle/codestyle.gradle'
apply from: 'gradle/release.gradle'
apply from: 'gradle/license.gradle'

//  DEPENDENCIES
// ==============

// Online dependencies
repositories {
    mavenLocal()
    mavenCentral()
}

sonarqube {
  properties {
    property "sonar.projectKey", "xenon-middleware_xenon"
    property "sonar.organization", "xenon-middleware"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

dependencies {
    // API
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'

    // ftp 
    compile group: 'commons-net', name: 'commons-net', version: '3.3'

    // ssh and sftp 
    compile group: 'org.apache.sshd', name: 'sshd-mina', version: '2.4.0'
    compile group: 'org.apache.sshd', name: 'sshd-sftp', version: '2.4.0'
    compile group: 'net.i2p.crypto', name: 'eddsa', version: '0.3.0'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'

    // webdav
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
    compile group: 'com.github.lookfirst', name: 'sardine', version: '5.8'

//    compile group: 'joda-time', name: 'joda-time', version: '2.8.1'

    // Runtime dependencies
    runtime group: 'ch.qos.logback', name: 'logback-core', version: '1.0.11'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.11'

    // Testing dependencies
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.16.0'

    testApiCompile sourceSets.main.output
    testApiCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    testApiCompile group: 'junit', name: 'junit', version: '4.12'

    integrationTestCompile sourceSets.testApi.output
    integrationTestCompile 'com.palantir.docker.compose:docker-compose-rule-junit4:1.0.0'

    // allow isolated and live tests to import from integration test,
    // so abstract test classes and docker compose files can be extended and reused
    fixedClientEnvironmentTestCompile sourceSets.testApi.output

    liveTestCompile sourceSets.testApi.output

    // TODO fixedClientEnvironmentTest should have same dependencies as integrationTest,
    // do no copy deps but append integrationTest.deps to fixedClientEnvironmentTest.deps
    fixedClientEnvironmentTestCompile 'com.palantir.docker.compose:docker-compose-rule-junit4:1.0.0'

    docGeneratorCompile sourceSets.main.output
    docGeneratorRuntime configurations.runtime
}
